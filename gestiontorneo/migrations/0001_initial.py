# Generated by Django 5.2.3 on 2025-06-26 05:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('edad_minima', models.PositiveIntegerField(blank=True, null=True)),
                ('edad_maxima', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Ya existe un usuario con ese nombre.'}, max_length=20, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('tipo_usuario', models.CharField(blank=True, choices=[('organizador', 'Organizador'), ('arbitro', '√Årbitro'), ('jugador', 'Jugador')], max_length=20, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jugador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rut', models.CharField(max_length=12, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestiontorneo.club')),
            ],
        ),
        migrations.CreateModel(
            name='Torneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField(blank=True, null=True)),
                ('ubicacion', models.CharField(max_length=100)),
                ('federado', models.BooleanField(default=False)),
                ('todo_competidor', models.BooleanField(default=False)),
                ('inscripciones_cerradas', models.BooleanField(default=False)),
                ('modalidad', models.CharField(blank=True, choices=[('', 'Sin definir'), ('llaves', 'Llaves (Brackets)'), ('grupos', 'Fases de Grupos')], default='', max_length=20)),
                ('torneo_iniciado', models.BooleanField(default=False)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestiontorneo.categoria')),
                ('organizador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='torneos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Partido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_hora', models.DateTimeField()),
                ('jugador1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidos_jugador1', to='gestiontorneo.jugador')),
                ('jugador2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidos_jugador2', to='gestiontorneo.jugador')),
                ('organizador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidos', to=settings.AUTH_USER_MODEL)),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestiontorneo.torneo')),
            ],
        ),
        migrations.CreateModel(
            name='JugadorBye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='BYE', max_length=50)),
                ('posicion_bye', models.PositiveIntegerField()),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='byes', to='gestiontorneo.torneo')),
            ],
            options={
                'unique_together': {('torneo', 'posicion_bye')},
            },
        ),
        migrations.CreateModel(
            name='GrupoTorneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=10)),
                ('numero', models.PositiveIntegerField()),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupos', to='gestiontorneo.torneo')),
            ],
            options={
                'ordering': ['numero'],
                'unique_together': {('torneo', 'numero')},
            },
        ),
        migrations.CreateModel(
            name='ParticipanteGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_cabeza_serie', models.BooleanField(default=False)),
                ('posicion_grupo', models.PositiveIntegerField()),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participantes', to='gestiontorneo.grupotorneo')),
                ('jugador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestiontorneo.jugador')),
            ],
            options={
                'ordering': ['posicion_grupo'],
                'unique_together': {('grupo', 'jugador')},
            },
        ),
        migrations.CreateModel(
            name='Participacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('jugador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participaciones', to='gestiontorneo.jugador')),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participaciones', to='gestiontorneo.torneo')),
            ],
            options={
                'unique_together': {('torneo', 'jugador')},
            },
        ),
        migrations.CreateModel(
            name='LlaveTorneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ronda', models.PositiveIntegerField()),
                ('posicion', models.PositiveIntegerField()),
                ('partido_jugado', models.BooleanField(default=False)),
                ('bye1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='llaves_bye1', to='gestiontorneo.jugadorbye')),
                ('bye2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='llaves_bye2', to='gestiontorneo.jugadorbye')),
                ('ganador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='llaves_ganadas', to='gestiontorneo.jugador')),
                ('jugador1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='llaves_jugador1', to='gestiontorneo.jugador')),
                ('jugador2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='llaves_jugador2', to='gestiontorneo.jugador')),
                ('torneo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='llaves', to='gestiontorneo.torneo')),
            ],
            options={
                'ordering': ['ronda', 'posicion'],
                'unique_together': {('torneo', 'ronda', 'posicion')},
            },
        ),
    ]
